swagger: "2.0"

info:
  version: 1.0.0
  title: Book and Todo keeping API
  description: A simple APIs to keep the Book details and Todos wish list

schemes:
  - https
host: localhost:3000
basePath: /api

paths:
  /books:
    get:
      summary: Gets all the Books
      description: Returns a list containing all Books.
      responses:
        200:
          description: A list of Books
          schema:
            type: array
            items:
              properties:
                name:
                  type: string
                author:
                  type: string
                isbn:
                  type: string
                price:
                  type: number
    post:
      summary: Add the new Book
      description: Adds a new Book into the database.
      responses:
        200:
          description: A details about added book.
          schema:
            type: array
            items:
              properties:
                name:
                  type: string
                author:
                  type: string
                isbn:
                  type: string
                price:
                  type: number
          400:
            description: Bad request for adding a book.
  /books/{ID}:
    get:
      summary: Gets a Book
      description: Returns a single Book for its ID.
      parameters:
        - name: ID
          in: path
          required: true
          description: The Book's ID
          type: string
      responses:
        200:
          description: A list of Books
          schema:
            type: array
            items:
              properties:
                name:
                  type: string
                author:
                  type: string
                isbn:
                  type: string
                price:
                  type: number
        404:
          description: The Book does not exists.
    patch:
      summary: Updates the Attributes of the Book
      description: Updates the details of the Book and returns the updated Book.
      parameters:
        - name: ID
          in: path
          required: true
          description: The Book's ID
          type: string
      responses:
        200:
          description: A Book
          schema:
            type: array
            items:
              properties:
                name:
                  type: string
                author:
                  type: string
                isbn:
                  type: string
                price:
                  type: number
        404:
          description: The Book does not exists for this ID.
        400:
          description: Bad request to update the existing Book.
    delete:
      summary: Delete the Book of the give ID
      description: Deletes the Book and returns the information of the deleted Book.
      parameters:
        - name: ID
          in: path
          required: true
          description: The Book's ID
          type: string
      responses:
        200:
          description: A Book
          schema:
            type: array
            items:
              properties:
                name:
                  type: string
                author:
                  type: string
                isbn:
                  type: string
                price:
                  type: number
        404:
          description: The Book does not exists for this ID.
        400:
          description: Bad request to delete the Book. 
